
# Set the directory for the R Markdown session
```{r setup, include=FALSE, cache = FALSE}
require("knitr")
opts_knit$set(root.dir = "C:/data")
```

# Install packages and suppress warnings
``` {r, echo = TRUE, include = TRUE}
suppressWarnings(suppressMessages(library(dplyr)))
suppressWarnings(suppressMessages(library(magrittr))) 
suppressWarnings(suppressMessages(library(tidyr))) 
suppressWarnings(suppressMessages(library(ggplot2))) 
suppressWarnings(suppressMessages(library(stats))) 
suppressWarnings(suppressMessages(library(factoextra)))
suppressWarnings(suppressMessages(library(knitr)))
suppressWarnings(suppressMessages(library(kableExtra)))
suppressWarnings(suppressMessages(library(purrr)))
```

# Code for Loading and Reading the datasets
``` {r, echo = TRUE, include = TRUE}

datasets <- c("campaign_desc","campaign_table","causal_data","coupon","coupon_redempt","hh_demographic","product","transaction_data","product_dpt_mapping")
for (i in seq_along(datasets))
{ 
  
  file_path = paste0(datasets[i],".csv")
  if(file.exists(file_path))
  {
    df <- read.csv(file_path)
    assign(datasets[i],df)
  } else
    print("No such file exits")
}
```

# HTML viewing of all datasets

      # View the 'transaction' dataset
      ``` {r, echo = FALSE, include = TRUE}
      transaction_data[1:3,] %>%
      kable() %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
        scroll_box(width = "100%")
      ```

      # View the 'demographics' dataset
      ``` {r, echo = FALSE, include = TRUE}
      hh_demographic[1:3,] %>%
      kable() %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
        scroll_box(width = "100%")
      ```

      # View the 'campaign_table' dataset
      ``` {r, echo = FALSE, include = TRUE}
      campaign_table[1:3,] %>%
      kable() %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
        scroll_box(width = "100%")
      ```

      #View the 'campaign description' dataset
      ``` {r, echo = FALSE, include = TRUE}
      campaign_desc[1:3,] %>%
      kable() %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
        scroll_box(width = "100%")
      ```

      # View the 'product table' dataset
      ``` {r, echo = FALSE, include = TRUE}
      product[1:3,] %>%
      kable() %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
        scroll_box(width = "100%")
      ```

      # View the 'coupon' dataset
      ``` {r, echo = FALSE, include = TRUE}
      coupon[1:3,] %>%
      kable() %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
        scroll_box(width = "100%")
      ```

      # View the 'coupon redemption' dataset
      ``` {r, echo = FALSE, include = TRUE}
      coupon_redempt[1:3,] %>%
      kable() %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
        scroll_box(width = "100%")
      ```

      # View the 'causal data' dataset
      ``` {r, echo = FALSE, include = TRUE}
      causal_data[1:3,] %>%
      kable() %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
        scroll_box(width = "100%")
      ```


# Detecting missing values 
``` {r, echo = TRUE, include = TRUE}
for (i in seq_along(datasets))
{ 
missing_values <- any(is.na(get(datasets[i])))
if (missing_values)
{
  print(paste(datasets[i], "has Missing values"))
 } else
  print(paste(datasets[i], "has no Missing values"))
}
```


# Preparing dataset for Problem Statement - 1 (linear regression analysis) using DPLYR's commands
``` {r, echo = TRUE, include = TRUE}
#Dataset 1-Demographic factors driving customer spend
Demographic_factors <- group_by(transaction_data, household_key) %>%
 summarise(Total_Sales = sum(sales_value))%>%
 inner_join(hh_demographic, by="household_key")
```
    # HTML viewing of final dataset and summary of response and predictor variables
    ``` {r, echo = FALSE, include = TRUE}
    Demographic_factors[1:5,] %>%
    kable() %>%
      kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),full_width = F)%>%
      scroll_box(width = "100%")
    summary(Demographic_factors)
    ```








